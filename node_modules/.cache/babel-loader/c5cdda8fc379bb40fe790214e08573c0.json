{"ast":null,"code":"import { useState, useEffect } from 'react';\n/**\n * Hook into an external source given a path\n * Returns whether the source is loaded or not\n * @param source\n */\n\nconst useExternalSource = source => {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  useEffect(() => {\n    if (window.externalSourcesLoaded[source].state === 'completed') {\n      setHasLoaded(true);\n      return;\n    }\n\n    window.externalSourcesLoaded[source].callback = () => {\n      setHasLoaded(true);\n    };\n  }, []);\n  return hasLoaded;\n};\n\nexport default useExternalSource;","map":{"version":3,"names":["useState","useEffect","useExternalSource","source","hasLoaded","setHasLoaded","window","externalSourcesLoaded","state","callback"],"sources":["/Users/maxshaw/Documents/GitHub/direflow-test/node_modules/direflow-component/dist/hooks/useExternalSource.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n/**\n * Hook into an external source given a path\n * Returns whether the source is loaded or not\n * @param source\n */\nconst useExternalSource = (source) => {\n    const [hasLoaded, setHasLoaded] = useState(false);\n    useEffect(() => {\n        if (window.externalSourcesLoaded[source].state === 'completed') {\n            setHasLoaded(true);\n            return;\n        }\n        window.externalSourcesLoaded[source].callback = () => {\n            setHasLoaded(true);\n        };\n    }, []);\n    return hasLoaded;\n};\nexport default useExternalSource;\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAIC,MAAD,IAAY;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIK,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,EAAqCK,KAArC,KAA+C,WAAnD,EAAgE;MAC5DH,YAAY,CAAC,IAAD,CAAZ;MACA;IACH;;IACDC,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,EAAqCM,QAArC,GAAgD,MAAM;MAClDJ,YAAY,CAAC,IAAD,CAAZ;IACH,CAFD;EAGH,CARQ,EAQN,EARM,CAAT;EASA,OAAOD,SAAP;AACH,CAZD;;AAaA,eAAeF,iBAAf"},"metadata":{},"sourceType":"module"}